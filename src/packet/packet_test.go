package packet

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestParsePacket(t *testing.T) {
	packets := []string{
		// MacBook querying (unicast responses)
		"\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x02lb\x07_dns-sd\x04_udp\x05local\x00\x00\x0c\x80\x01\x08_airport\x04_tcp\xc0\x1c\x00\x0c\x80\x01\x07_rdlink\xc00\x00\x0c\x80\x01\x04_ipp\xc00\x00\x0c\x80\x01\x06_uscan\xc00\x00\x0c\x80\x01\x04_ptp\xc00\x00\x0c\x80\x01\x07_ippusb\xc00\x00\x0c\x80\x01\x05_ipps\xc00\x00\x0c\x80\x01\x08_printer\xc00\x00\x0c\x80\x01\x07_uscans\xc00\x00\x0c\x80\x01\x08_scanner\xc00\x00\x0c\x80\x01\x0f_pdl-datastream\xc00\x00\x0c\x80\x01\x04_hap\xc00\x00\x0c\x80\x01\x04_hap\xc0\x17\x00\x0c\x80\x01\x0b_googlecast\xc00\x00\x0c\x80\x01\x19_spotify-social-listening\xc00\x00\x0c\x80\x01\x0b_afpovertcp\xc00\x00\x0c\x80\x01\x04_smb\xc00\x00\x0c\x80\x01\x04_rfb\xc00\x00\x0c\x80\x01\x06_adisk\xc00\x00\x0c\x80\x01",

		// MacBook querying for Spotify (multicast responses)
		"\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x10_spotify-connect\x04_tcp\x05local\x00\x00\x0c\x00\x01",

		// MacBook querying (multicast responses)
		"\x00\x00\x00\x00\x00\x14\x00\x03\x00\x00\x00\x00\x02lb\x07_dns-sd\x04_udp\x05local\x00\x00\x0c\x00\x01\x08_airport\x04_tcp\xc0\x1c\x00\x0c\x00\x01\x07_rdlink\xc00\x00\x0c\x00\x01\x04_ipp\xc00\x00\x0c\x00\x01\x06_uscan\xc00\x00\x0c\x00\x01\x04_ptp\xc00\x00\x0c\x00\x01\x07_ippusb\xc00\x00\x0c\x00\x01\x05_ipps\xc00\x00\x0c\x00\x01\x08_printer\xc00\x00\x0c\x00\x01\x07_uscans\xc00\x00\x0c\x00\x01\x08_scanner\xc00\x00\x0c\x00\x01\x0f_pdl-datastream\xc00\x00\x0c\x00\x01\x04_hap\xc00\x00\x0c\x00\x01\x04_hap\xc0\x17\x00\x0c\x00\x01\x0b_googlecast\xc00\x00\x0c\x00\x01\x19_spotify-social-listening\xc00\x00\x0c\x00\x01\x0b_afpovertcp\xc00\x00\x0c\x00\x01\x04_smb\xc00\x00\x0c\x00\x01\x04_rfb\xc00\x00\x0c\x00\x01\x06_adisk\xc00\x00\x0c\x00\x01\xc0I\x00\x0c\x00\x01\x00\x00\x11\x94\x00\x1d\x1aBrother HL-L3270CDW series\xc0I\xc0\x86\x00\x0c\x00\x01\x00\x00\x11\x94\x00\x1d\x1aBrother HL-L3270CDW series\xc0\x86\xc0\xb2\x00\x0c\x00\x01\x00\x00\x11\x94\x00\x1d\x1aBrother HL-L3270CDW series\xc0\xb2",

		// MacBook advertising
		"\x00\x00\x84\x00\x00\x00\x00\x0a\x00\x00\x00\x03\x0fMacBook Pro (3)\x08_airplay\x04_tcp\x05local\x00\x00\x10\x80\x01\x00\x00\x11\x94\x01c\x05acl=0\x1adeviceid=A6:D9:07:AA:AC:61\x13fex=1c9/St5PFzg2IQw\x1efeatures=0x4A7FCFD5,0x38174FDE\x0bflags=0x204(gid=AB2A9B72-132F-4406-8A50-19E4DA2AB59F\x05igl=0\x06gcgl=0\x14model=MacBookPro18,2\x04at=4\x0dprotovers=1.1'pi=a7507dbe-310d-459f-b920-8607f0028577(psi=A5D907AA-AC61-4C03-833C-2E00D173E1CBCpk=95ed22ba5e2a0083a492e7ab57dec5e948a2b7fd6370bf44cca12e2a702573ad\x0fsrcvers=860.7.1\x09_services\x07_dns-sd\x04_udp\xc0*\x00\x0c\x00\x01\x00\x00\x11\x94\x00\x02\xc0\x1c\xc0\x1c\x00\x0c\x00\x01\x00\x00\x11\x94\x00\x02\xc0\x0c\x1cA6D907AAAC61@MacBook Pro (3)\x05_raop\xc0%\x00\x10\x80\x01\x00\x00\x11\x94\x00\xbd\x0acn=0,1,2,3\x07da=true\x08et=0,3,5\x18ft=0x4A7FCFD5,0x38174FDE\x08sf=0x204\x08md=0,1,2\x11am=MacBookPro18,2Cpk=95ed22ba5e2a0083a492e7ab57dec5e948a2b7fd6370bf44cca12e2a702573ad\x06tp=UDP\x08vn=65537\x0avs=860.7.1\x04vv=0\xc1\x9e\x00\x0c\x00\x01\x00\x00\x11\x94\x00\x02\xc1\xee\xc1\xee\x00\x0c\x00\x01\x00\x00\x11\x94\x00\x02\xc1\xd1\xc0\x0c\x00!\x80\x01\x00\x00\x11\x94\x00\x16\x00\x00\x00\x00\x1bX\x0dMacBook-Pro-3\xc0*\xc1\xd1\x00!\x80\x01\x00\x00\x11\x94\x00\x08\x00\x00\x00\x00\x1bX\xc2\xeb\xc2\xeb\x00\x1c\x80\x01\x00\x00\x11\x94\x00\x10\xfe\x80\x00\x00\x00\x00\x00\x00\x14\xe4\xe8\x91\x9f[\x86\xeb\xc2\xeb\x00\x01\x80\x01\x00\x00\x11\x94\x00\x04\xc0\xa8\x01\x05\xc0\x0c\x00/\x80\x01\x00\x00\x11\x94\x00\x09\xc0\x0c\x00\x05\x00\x00\x80\x00@\xc1\xd1\x00/\x80\x01\x00\x00\x11\x94\x00\x09\xc1\xd1\x00\x05\x00\x00\x80\x00@\xc2\xeb\x00/\x80\x01\x00\x00\x11\x94\x00\x08\xc2\xeb\x00\x04@\x00\x00\x08",
	}

	for _, packet := range packets {
		if msg, err := ParsePacket([]byte(packet)); assert.Nil(t, err) {
			t.Log(msg.String())
		}
	}
}
